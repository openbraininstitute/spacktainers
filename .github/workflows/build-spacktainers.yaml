---
name: Build Spacktainers
on:
  workflow_call:
    inputs:
      spacktainers:
        description: List of spacktainers to build
        required: true
        type: string
      environment:
        description: Which AWS environment to put the containers in
        type: string
        default: sandbox-hpc
jobs:
  spacktainer-build-job:
    environment: ${{ inputs.environment }}
    strategy:
      matrix:
        spacktainer: ${{ fromJson(inputs.spacktainers) }}
    runs-on:
      - codebuild-spacktainers-tf-${{ github.run_id }}-${{ github.run_attempt }}
    continue-on-error: true
    steps:
      - name: clone repo
        uses: actions/checkout@v4
      - name: prepare to build container
        env:
          AWS_ECR_URL: ${{ secrets.AWS_ECR_URL }}
        run: |-
          cd container_definitions/amd64/${{ matrix.spacktainer }}
          cat << EOF > Dockerfile
          FROM ${AWS_ECR_URL}/spacktainers/builder:latest AS builder
          FROM ${AWS_ECR_URL}/spacktainers/runtime:latest

          # Triggers building the 'builder' image, otherwise it is optimized away
          COPY --from=builder /etc/debian_version /etc/debian_version
          EOF
          if [[ -f Dockerfile.epilogue ]]; then
          cat Dockerfile.epilogue >> Dockerfile
          fi
      - name: build ${{ matrix.spacktainer }}
        uses: ./.github/actions/build_container
        with:
          AWS_ECR_URL: ${{ secrets.AWS_ECR_URL }}
          AWS_ECR_PATH: /spacktainers/${{ matrix.spacktainer }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          GHCR_USER: ${{ secrets.GHCR_USER }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GHCR_PATH: /openbraininstitute/spack-${{ matrix.spacktainer }}
          BUILD_PATH: container_definitions/amd64/${{ matrix.spacktainer }}
          BUILDAH_EXTRA_ARGS: --label org.opencontainers.image.revision="$GITHUB_SHA"
            --label org.opencontainers.image.authors="$GITHUB_TRIGGERING_ACTOR" --label
            org.opencontainers.image.url="https://github.com/${GITHUB_REPOSITORY}"
            --label org.opencontainers.image.source="https://github.com/${GITHUB_REPOSITORY}"
            --build-arg SPACK_BRANCH=v0.23.1 --build-arg REPOS_BRANCH=develop --build-arg
            CACHE_BUCKET=${{ secrets.AWS_CACHE_BUCKET }} --build-arg MIRROR_AUTH_ARG="\"--s3-access-key-id='${{ secrets.AWS_CACHE_ACCESS_KEY_ID }}
            --s3-access-key-secret=${{ secrets.AWS_CACHE_SECRET_ACCESS_KEY }}'\""
          # ' --label org.opencontainers.image.created="$CI_JOB_STARTED_AT"'
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          SPACK_DEPLOYMENT_KEY_PUB: ${{ secrets.SPACK_DEPLOYMENT_KEY_PUB }}
          SPACK_DEPLOYMENT_KEY_PRIVATE: ${{ secrets.SPACK_DEPLOYMENT_KEY_PRIVATE }}
  convert-to-singularity:
    if: ${{ always() && needs.spacktainer-build-job.result == 'success' }}
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: [spacktainer-build-job]
    strategy:
      matrix:
        spacktainer: ${{ fromJson(inputs.spacktainers) }}
    steps:
      - name: Install singularity
        run: |-
          sudo wget -O- http://neuro.debian.net/lists/xenial.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
          sudo cat /etc/apt/sources.list.d/neurodebian.sources.list
          sudo wget -O /etc/apt/trusted.gpg.d/neurodebian.asc "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xA5D32F012649A5A9"
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev uuid-dev libgpgme11-dev squashfs-tools libseccomp-dev pkg-config
          sudo apt-get install -y singularity-container
          singularity --version
      - name: Install awscli
        uses: unfor19/install-aws-cli-action@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Convert container
        run: |-
          export SINGULARITY_DOCKER_USERNAME=AWS
          export SINGULARITY_DOCKER_PASSWORD=$(aws ecr get-login-password)
          singularity pull --no-https "${{ matrix.spacktainer }}.sif" "docker://${{ secrets.AWS_ECR_URL }}/spacktainers/${{ matrix.spacktainer }}:latest"
      - name: Drop container in S3 bucket
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: ./${{ matrix.spacktainer }}.sif
          destination: s3://${{ secrets.S3_SINGULARITY_BUCKET }}/${{ secrets.S3_CONTAINER_ROOT
            }}/${{ matrix.spacktainer }}.sif
          aws_access_key_id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws_region: ${{ vars.AWS_REGION }}
