---
name: Build Base Container
description: Build runtime / builder depending on variables
inputs:
  AWS_ECR_URL:
    description: Base URL for AWS ECR where our containers live
    required: true
  AWS_ECR_PATH:
    description: path under the AWS ECR where this specific container lives
    required: true
  AWS_ACCESS_KEY_ID:
    description: Access key ID for AWS
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: Secret access key for AWS
    required: true
  BUILD_PATH:
    description: Under which directory in this repo the Dockerfile lives
    required: true
  BUILDAH_EXTRA_ARGS:
    description: Extra args to pass to buildah
    required: false
    default: ''
  DOCKERHUB_USER:
    description: Username for Dockerhub authentication
    required: true
  DOCKERHUB_PASSWORD:
    description: Password for Dockerhub authentication
    required: true
  GHCR_USER:
    description: Username for GHCR authentication
    required: true
  GHCR_TOKEN:
    description: Token for GHCR authentication
    required: true
  GHCR_PATH:
    description: Path for the GitHub container registry
    required: true
  SPACK_DEPLOYMENT_KEY_PUB:
    description: Public key for spack deployments
    required: true
  SPACK_DEPLOYMENT_KEY_PRIVATE:
    description: Private key for spack deployments
    required: true
runs:
  using: composite
  steps:
    - name: create container
      shell: bash
      run: |-
        echo "Building container in ${{ inputs.BUILD_PATH }}"
        set -x
        apt-get update
        apt-get install -y awscli buildah podman
        export STORAGE_DRIVER=vfs  # allows to build inside containers without additional mounts
        export BUILDAH_FORMAT=docker  # enables ONBUILD instructions which are not OCI compatible
        export REGISTRY_IMAGE_TAG=latest  # for now
        echo "${{ inputs.SPACK_DEPLOYMENT_KEY_PUB }}" > ${{ inputs.BUILD_PATH }}/key.pub
        echo "${{ inputs.SPACK_DEPLOYMENT_KEY_PRIVATE }}" > ${{ inputs.BUILD_PATH }}/key
        aws ecr get-login-password --region us-east-1 | buildah login --username AWS --password-stdin ${{ inputs.AWS_ECR_URL }}
        buildah login --username ${{ inputs.DOCKERHUB_USER }} --password ${{ inputs.DOCKERHUB_PASSWORD }} docker.io
        buildah login --username ${{ inputs.GHCR_USER }} --password ${{ inputs.GHCR_TOKEN }} ghcr.io
        # This is written like that in case $BUILDAH_EXTRA_ARGS has args that require spaces,
        # which is tricky with shell variable expansion.  Similar to Kaniko, see also:
        # https://github.com/GoogleContainerTools/kaniko/issues/1803
        export IFS=''
        COMMAND="buildah bud --iidfile image_id ${{ inputs.BUILDAH_EXTRA_ARGS }} ${{ inputs.BUILD_PATH }}"
        echo "${COMMAND}"
        eval "${COMMAND}"
        # Sometimes buildah push fails on the first attempt
        buildah push $(<image_id) "docker://${{ inputs.AWS_ECR_URL }}${{ inputs.AWS_ECR_PATH }}:${REGISTRY_IMAGE_TAG}" || sleep 10; buildah push $(<image_id) "docker://${{ inputs.AWS_ECR_URL }}${{ inputs.AWS_ECR_PATH }}:${REGISTRY_IMAGE_TAG}"
        # Also push to ghcr
        buildah push $(<image_id) "docker://ghcr.io${{ inputs.GHCR_PATH }}:${REGISTRY_IMAGE_TAG}" || sleep 10; buildah push $(<image_id) "docker://ghcr.io${{ inputs.GHCR_PATH }}:${REGISTRY_IMAGE_TAG}"
